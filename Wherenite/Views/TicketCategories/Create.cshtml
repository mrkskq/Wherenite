@model Wherenite.Models.TicketCategory

@{
    ViewBag.Title = "Create";
}

<h2>Додади категорија и цена</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="form-group">
    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
    <div>(пр. Партер, Фан Пит, Блок А, Блок Б...)</div>
    <div class="col-md-10">
        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>
</div>

 

    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.EventId, "EventId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("EventId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EventId, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @Html.HiddenFor(model => model.EventId)


<div class="form-group" style="margin-top: 10px">
    <div class="col-md-offset-2 col-md-10">
        <input type="submit" value="Додади" class="btn btn-light" />
    </div>
</div>
</div>
}

<p style="display: flex; justify-content: center; margin-bottom: 50px; margin-top: 50px">
    @Html.ActionLink(" < Назад", "Details", "Events", new {id = Model.EventId}, new { @class = "btn btn-dark btn-lg" })
</p>
